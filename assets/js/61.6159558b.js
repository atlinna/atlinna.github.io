(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{650:function(t,e,a){"use strict";a.r(e);var s=a(7),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"promise"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#promise"}},[t._v("#")]),t._v(" Promise")]),t._v(" "),a("h3",{attrs:{id:"promise-a-规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#promise-a-规范"}},[t._v("#")]),t._v(" Promise A+  规范")]),t._v(" "),a("p",[t._v("存在三种状态、两个阶段")]),t._v(" "),a("ul",[a("li",[t._v("pendding 挂起状态")]),t._v(" "),a("li",[t._v("fulfilled     成功")]),t._v(" "),a("li",[t._v("rejected    失败")])]),t._v(" "),a("p",[t._v("只能从挂起到成功 或者 挂起到失败。")]),t._v(" "),a("p",[t._v("resolve(data) -> 处理成功")]),t._v(" "),a("p",[t._v("reject(reason) -> 处理失败")]),t._v(" "),a("p",[t._v("处理成功的方法为 onResolved")]),t._v(" "),a("p",[t._v("处理失败的方法为 onRejected")]),t._v(" "),a("h4",{attrs:{id:"promise-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#promise-对象"}},[t._v("#")]),t._v(" Promise 对象")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("未决阶段\t\t\t\t\t\t\t\t\t\t\t已决阶段 \nunsettled\t\t\t\t\t\t\t\t\t\t settled\t\t\t\t\t\tdata\n \t\t\t\t\t\t\t\t\t-----\x3e\t\t 完成状态 fulfilled =======》 onFulfilled(data)\n挂起状态\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treason\npendding\t\t\t\t\t-----\x3e     失败状态 rejected ======》 onRejected(reason)\n")])])]),a("h3",{attrs:{id:"promise-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#promise-api"}},[t._v("#")]),t._v(" Promise Api")])])}),[],!1,null,null,null);e.default=r.exports}}]);