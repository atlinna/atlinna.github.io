(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{664:function(t,s,a){"use strict";a.r(s);var r=a(7),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"如何判断回文串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何判断回文串"}},[t._v("#")]),t._v(" 如何判断回文串")]),t._v(" "),a("p",[t._v("将字串逆置后于原串相等即为回文子串。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("  # str = 'abcba'\n  n_str = str[::-1]\n  if n_str == str:\n    # 为回文子串\n  else:\n    # 不是\n")])])]),a("h2",{attrs:{id:"找到最长的回文子串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#找到最长的回文子串"}},[t._v("#")]),t._v(" 找到最长的回文子串")]),t._v(" "),a("p",[t._v("动态规划：\n如果一个子串是回文子串，那么去掉头和尾之后一定还是回文子串。\n假设，i 为头指针， j 为尾指针。\n分为两种情况：")]),t._v(" "),a("ul",[a("li",[t._v("首尾相同，且首尾相减小于 3，那么不用判断肯定是回文子串。")]),t._v(" "),a("li",[t._v("首尾相同，且首尾相减之后不小于 3 ，那么就有 s[i:j] = s[i+1,j-1]")])]),t._v(" "),a("p",[a("strong",[t._v("注意：dp数组初始化的时候单个字符也就是 i = j 的情况下肯定是回文子串，所以为 true")]),t._v("。")])])}),[],!1,null,null,null);s.default=e.exports}}]);