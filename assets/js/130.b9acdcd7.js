(window.webpackJsonp=window.webpackJsonp||[]).push([[130],{716:function(t,a,n){"use strict";n.r(a);var e=n(10),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"数组的遍历方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数组的遍历方法"}},[t._v("#")]),t._v(" 数组的遍历方法")]),t._v(" "),n("p",[t._v("1、反转字符串")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('输入：s = "the sky is blue"\n输出："blue is sky the"\n')])])]),n("p",[t._v("思路：先反转整个字符串，然后再对每个单词进行反转。")]),t._v(" "),n("p",[t._v("2、二维矩阵旋转（n x n）阶。\n思路：先按照对角线，互换位置，然后再对每一级进行反转。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("var rotate = function (matrix) {\n    var n = matrix.length;\n    for (var i = 0; i < n; i++) {\n        for (var j = i; j < n; j++) {\n            if (i == j) continue;\n            var temp = matrix[i][j];\n            matrix[i][j] = matrix[j][i];\n            matrix[j][i] = temp;\n        }\n    }\n    for (var i = 0; i < n; i++) {\n        matrix[i].reverse();\n    }\n};\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);