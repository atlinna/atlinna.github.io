(window.webpackJsonp=window.webpackJsonp||[]).push([[135],{721:function(v,_,t){"use strict";t.r(_);var e=t(10),i=Object(e.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("p",[v._v("一个完整的事件循环过程，可以概括为一下阶段：")]),v._v(" "),t("h3",{attrs:{id:"事件循环"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事件循环"}},[v._v("#")]),v._v(" 事件循环")]),v._v(" "),t("p",[v._v("由于 js 是单线程的编程语言，同一时间只能做一件事情，所有任务都要排队一件一件完成。")]),v._v(" "),t("p",[v._v("事件循环分为同步任务和异步任务")]),v._v(" "),t("p",[t("strong",[v._v("同步任务")]),v._v("就是主线程上排队执行的任务。只有当前任务执行完，才会执行下一个任务。")]),v._v(" "),t("p",[t("strong",[v._v("异步任务")]),v._v("不进入主线程，而是进入"),t("strong",[v._v("任务队列")]),v._v("的任务，只有任务队列通知主线程某个异步任务可以执行了，才会进入主线程执行这个任务。")]),v._v(" "),t("p",[v._v("任务队列又分为宏任务和微任务：")]),v._v(" "),t("ul",[t("li",[v._v("宏任务：script，setTimeout，setInterval")]),v._v(" "),t("li",[v._v("微任务：promise 的 then，MutationObserver")])]),v._v(" "),t("ol",[t("li",[v._v("主线程执行同步代码")]),v._v(" "),t("li",[v._v("遇到宏任务添加到宏任务队列")]),v._v(" "),t("li",[v._v("遇到微任务添加到微任务队列")]),v._v(" "),t("li",[v._v("同步代码执行完毕，接下来会先清空微任务队列（回到 2、3）直到清空微队列")]),v._v(" "),t("li",[v._v("然后从宏队列取出一个任务（回到2，3，4）直到宏任务队列清空。")])]),v._v(" "),t("p",[v._v("常见的宏任务：")]),v._v(" "),t("ul",[t("li",[v._v("setTimeout")]),v._v(" "),t("li",[v._v("setInterval")]),v._v(" "),t("li",[v._v("setImmediate")]),v._v(" "),t("li",[v._v("script 代码块")]),v._v(" "),t("li",[v._v("I/O 操作。")])]),v._v(" "),t("p",[v._v("常见的微任务：")]),v._v(" "),t("ul",[t("li",[v._v("Promise.then()")]),v._v(" "),t("li",[v._v("MutationObserver")]),v._v(" "),t("li",[v._v("process.nextTick")])])])}),[],!1,null,null,null);_.default=i.exports}}]);