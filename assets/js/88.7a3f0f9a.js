(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{677:function(t,s,a){"use strict";a.r(s);var e=a(10),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"ts-类型声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ts-类型声明"}},[t._v("#")]),t._v(" TS 类型声明")]),t._v(" "),a("h3",{attrs:{id:"基本语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本语法"}},[t._v("#")]),t._v(" 基本语法")]),t._v(" "),a("p",[t._v("声明变量的时候通过“：” 来为变量指定类型")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("let a:number;\n")])])]),a("p",[t._v("然后再去赋值其他类型的时候就会报错")]),t._v(" "),a("p",[t._v("如果是在声明的时候直接赋值的话可以省略冒号：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// let s: boolean = true;\nlet s = true;\n")])])]),a("p",[a("strong",[t._v("TS 会自行推断赋值的类型然后给变量设置为对应的类型。 --类型推断")])]),t._v(" "),a("p",[t._v("不考虑 JS 中函数的类型。只考虑他的参数（arguments）的类型。\n在参数位置使用冒号可以限制参数的数据类型，而在函数的后面使用冒号是为了限制函数返回值的类型。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("function sum(a: number, b: string): string {\n    return a + b\n}\n\nlet s = sum(11, '22');\ns = sum(11, 22);\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);