(window.webpackJsonp=window.webpackJsonp||[]).push([[145],{732:function(e,n,t){"use strict";t.r(n);var a=t(10),r=Object(a.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"链表的逆置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#链表的逆置"}},[e._v("#")]),e._v(" 链表的逆置")]),e._v(" "),t("h4",{attrs:{id:"逆转完整列表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#逆转完整列表"}},[e._v("#")]),e._v(" 逆转完整列表")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("var reverseList = function (head) {\n    if (head == null || head.next == null) {\n        return head;\n    }\n    var last = reverseList(head.next);\n    head.next.next = head;\n    head.next = null;\n    return last;\n};\n")])])]),t("h4",{attrs:{id:"逆转前n个节点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#逆转前n个节点"}},[e._v("#")]),e._v(" 逆转前N个节点")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("var successor = null;\nvar reverseN = function (head, n) {\n    if (n == 1) {\n        successor = head.next;\n        return head;\n    }\n    var last = reverseN(head.next, n - 1);\n    head.next.next = head;\n    head.next = successor;\n    return last;\n}\n")])])]),t("h4",{attrs:{id:"逆转区间内节点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#逆转区间内节点"}},[e._v("#")]),e._v(" 逆转区间内节点")]),e._v(" "),t("p",[e._v("如果左边界为1，那么就相当于反转前"),t("code",[e._v("right")]),e._v("个节点，如果左边界不为1，那么通过递归，将找到"),t("code",[e._v("left")]),e._v("左边界等于1的节点。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("var reverseBetween = function (head, left, right) {\n    if (left == 1) {\n        return reverseN(head, right);\n    }\n\n    var last = reverseBetween(head.next, left - 1, right - 1);\n    head.next = last\n    return head;\n};\n\nvar successor = null;\nvar reverseN = function (head, n) {\n    if (n == 1) {\n        successor = head.next;\n        return head;\n    }\n    var last = reverseN(head.next, n - 1);\n    head.next.next = head;\n    head.next = successor;\n    return last;\n}\n")])])])])}),[],!1,null,null,null);n.default=r.exports}}]);