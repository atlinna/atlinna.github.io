(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{685:function(e,t,n){"use strict";n.r(t);var a=n(10),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h2",{attrs:{id:"原型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#原型"}},[e._v("#")]),e._v(" 原型")]),e._v(" "),n("p",[e._v("原型是构建出的对象的爹。")]),e._v(" "),n("p",[e._v("有构造函数通过 new 操作符创建实例，实例上存在属性 "),n("code",[e._v("__proto__")]),e._v(" (也就是原型) 指向原型对象 "),n("code",[e._v("prototype")])]),e._v(" "),n("p",[e._v("原型对象 "),n("code",[e._v("prototype")]),e._v("中有属性 "),n("code",[e._v("constructor")]),e._v("指向我们的构造函数。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("function Person(){\n\n}\n\nvar p = new Person();\n")])])]),n("h3",{attrs:{id:"原型的增删改查"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#原型的增删改查"}},[e._v("#")]),e._v(" 原型的增删改查")]),e._v(" "),n("p",[e._v("以构造函数 Person 为例：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("function Person(name){\n\tthis.name = name\n}\n\nvar person = new Person();\n")])])]),n("p",[e._v("查：")]),e._v(" "),n("p",[e._v("会先查找自身是否存在访问属性，如果不存在则会像原型中查找。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("person.name // 访问的是自身的属性 name\n// 假设我们在创建实例之前给 Person 的原型添加新的属性；\nPerson.prototype.age = 18;\n\n// 此时我们可以通过\nperson.age  的方式来访问原型中的属性\n")])])]),n("p",[e._v("增：")]),e._v(" "),n("p",[e._v("1、")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("Person.prototype.name = '张三';\n")])])]),n("p",[e._v("2、")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("Person.prototype = {\n\tname:'zhang san',\n\tage:19\n}\n")])])]),n("p",[e._v("改：")]),e._v(" "),n("p",[e._v("实例创建之前和之后都起作用可以直接修改原型中的单一属性，但是如果在实例创建后使用对象字面量重新赋值是不生效的。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("Person.prototype = {\n            height: 100\n        }\n\n        function Person() {\n            this.eat = function () {\n                this.height++\n            }\n        }\n\n        Person.prototype.height = 1\n\n        var p = new Person()\n\n        Person.prototype = {\n            height: 100,\n        } // 无效。\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);