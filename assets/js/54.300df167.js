(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{643:function(a,v,e){"use strict";e.r(v);var _=e(10),t=Object(_.a)({},(function(){var a=this,v=a.$createElement,e=a._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h2",{attrs:{id:"盒模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#盒模型"}},[a._v("#")]),a._v(" 盒模型")]),a._v(" "),e("p",[a._v("弹性盒模型")]),a._v(" "),e("p",[a._v("display：flex/inline-flex")]),a._v(" "),e("p",[a._v("Flex 盒模型由主轴"),e("code",[a._v("row")]),a._v("和交叉轴"),e("code",[a._v("column")]),a._v("决定默认 水平方向为主轴，垂直方向为交叉轴")]),a._v(" "),e("h3",{attrs:{id:"父级设置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#父级设置"}},[a._v("#")]),a._v(" 父级设置")]),a._v(" "),e("h4",{attrs:{id:"flex-direction"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex-direction"}},[a._v("#")]),a._v(" flex-direction")]),a._v(" "),e("p",[a._v("改变主轴和交叉轴 默认值为 row")]),a._v(" "),e("p",[a._v("row、row-reverse、column、column-reverse")]),a._v(" "),e("h4",{attrs:{id:"flex-wrap"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex-wrap"}},[a._v("#")]),a._v(" flex-wrap")]),a._v(" "),e("p",[a._v("换行 默认值为 nowrap")]),a._v(" "),e("h4",{attrs:{id:"align-items"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#align-items"}},[a._v("#")]),a._v(" align-items")]),a._v(" "),e("p",[a._v("主要是针对单行文本进行居中")]),a._v(" "),e("h4",{attrs:{id:"align-content"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#align-content"}},[a._v("#")]),a._v(" align-content")]),a._v(" "),e("p",[a._v("主要是针对多行文本进行居中")]),a._v(" "),e("h3",{attrs:{id:"子集设置-设置到子盒子"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#子集设置-设置到子盒子"}},[a._v("#")]),a._v(" 子集设置（设置到子盒子）")]),a._v(" "),e("h4",{attrs:{id:"order"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#order"}},[a._v("#")]),a._v(" order")]),a._v(" "),e("p",[a._v("对比 "),e("code",[a._v("order")]),a._v(" 的值，小的排在前面。")]),a._v(" "),e("h4",{attrs:{id:"align-self"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#align-self"}},[a._v("#")]),a._v(" align-self")]),a._v(" "),e("p",[a._v("同 "),e("code",[a._v("align-item")]),a._v(" 但是优先级比 "),e("code",[a._v("align-items")]),a._v(" 高，但是如果父级设置的是 "),e("code",[a._v("align-content")]),a._v(" 那么 "),e("code",[a._v("align-self")]),a._v("将不会生效。")]),a._v(" "),e("h4",{attrs:{id:"flex-grow"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex-grow"}},[a._v("#")]),a._v(" flex-grow")]),a._v(" "),e("p",[a._v("如果同一行存在剩余空间，将会按照 "),e("code",[a._v("flex-grow")]),a._v(" 设置的比例进行分配。")]),a._v(" "),e("p",[a._v("假设有一个盒子存在 300px 的剩余。有三个子盒子")]),a._v(" "),e("p",[a._v("当我同时给子盒子设置 "),e("code",[a._v("flex-grow:1")]),a._v(" 此时比例为 "),e("code",[a._v("1:1:1")]),a._v(" 平分为三份 一份 100px。")]),a._v(" "),e("p",[a._v("当我单独给盒子设置比例为 "),e("code",[a._v("1:2:3")]),a._v("  的时候此时，共6份 1=50px 2=100px 3=150px")]),a._v(" "),e("h4",{attrs:{id:"flex-shrink"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex-shrink"}},[a._v("#")]),a._v(" flex-shrink")]),a._v(" "),e("p",[a._v("超出父盒子宽度的部分，按照 flex-shrink 的值进行缩减。")]),a._v(" "),e("h5",{attrs:{id:"子项宽度相同"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#子项宽度相同"}},[a._v("#")]),a._v(" 子项宽度相同：")]),a._v(" "),e("p",[a._v("假设父盒子宽度 300px 子盒子宽度 200px ， "),e("code",[a._v("flex-shrink:1")]),a._v(" ，超出父级的宽度为 300 - 200 * 3 为 300px")]),a._v(" "),e("p",[a._v("每个盒子的比例相同，那么计算为 300 / 3")]),a._v(" "),e("h5",{attrs:{id:"子项宽度不同"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#子项宽度不同"}},[a._v("#")]),a._v(" 子项宽度不同：")]),a._v(" "),e("p",[a._v("假设父盒子宽度 300px 子盒子 一、二 的宽度均为 100px ，子盒子三的宽度为 200px，"),e("code",[a._v("flex-shrink")]),a._v(" 为 1、1、2")]),a._v(" "),e("p",[a._v("那么他们缩减的方式为：")]),a._v(" "),e("p",[a._v("仅超出父盒子宽度 100px，计算公式为 "),e("code",[a._v("(flex-shrink 的值 * 盒子宽度 / 每个盒子宽度 * 它对应的flex-shrink值) * 超出盒子的宽度")]),a._v("。")]),a._v(" "),e("p",[a._v("盒子的宽度标准盒模型下为 padding * 2 + border * 2 + width，怪异盒模型为 width - padding * 2 - border * 2.")]),a._v(" "),e("ul",[e("li",[a._v("超出盒子 ：100px")]),a._v(" "),e("li",[a._v("每个盒子的宽度 * flex-shrink ：100 *1 + 100 * 1 + 200 * 2 = 600")])]),a._v(" "),e("p",[a._v("即：第一个盒子的缩减为： 100/600 * 100")]),a._v(" "),e("p",[a._v("​\t\t第二个盒子的缩减为：100/600 * 100")]),a._v(" "),e("p",[a._v("​\t\t第三个盒子的缩减为：200 * 2 / 600 * 100.")]),a._v(" "),e("h4",{attrs:{id:"flex-basis"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex-basis"}},[a._v("#")]),a._v(" flex-basis")]),a._v(" "),e("p",[e("code",[a._v("basis")]),a._v(" 本意是用来取代"),e("code",[a._v("flex")]),a._v("盒子模型中子项的 "),e("code",[a._v("width")]),a._v("即"),e("strong",[a._v("子项的 "),e("code",[a._v("flex-basis")]),a._v(" 的优先级大于"),e("code",[a._v("width")])])]),a._v(" "),e("ul",[e("li",[a._v("如果只写 basis 那么代表盒子的最小宽度为 basis，此时盒子的宽度能够随着内容区增大")]),a._v(" "),e("li",[a._v("如果设置了 basis 和 width，且 basis 小于 width，那么代表盒子的最小宽度为 basis，最大宽度为 width。")])]),a._v(" "),e("h4",{attrs:{id:"flex"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex"}},[a._v("#")]),a._v(" flex")]),a._v(" "),e("p",[a._v("是由 flex-grow、flex-shrink、flex-basis 结合的一个复合属性。")])])}),[],!1,null,null,null);v.default=t.exports}}]);