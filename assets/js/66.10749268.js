(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{655:function(t,a,s){"use strict";s.r(a);var e=s(10),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[t._v("#")]),t._v(" 字符串")]),t._v(" "),s("p",[t._v("新增 API")]),t._v(" "),s("h3",{attrs:{id:"includes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#includes"}},[t._v("#")]),t._v(" includes")]),t._v(" "),s("p",[t._v("Includes(str,index)")]),t._v(" "),s("p",[t._v("判断一段文字中是否存在子串。第二个参数是指定位置开始查询")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const str = 'abcdef';\nstr.includes('d') // true\n")])])]),s("h3",{attrs:{id:"startswith"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#startswith"}},[t._v("#")]),t._v(" startsWith")]),t._v(" "),s("p",[t._v("startsWith(str)")]),t._v(" "),s("p",[t._v("判断字符串是否以 "),s("code",[t._v("str")]),t._v(" 开头。")]),t._v(" "),s("h3",{attrs:{id:"endswith"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#endswith"}},[t._v("#")]),t._v(" endsWith")]),t._v(" "),s("p",[t._v("endsWith(str)")]),t._v(" "),s("p",[t._v("判断字符串是否以 "),s("code",[t._v("str")]),t._v(" 结尾。")]),t._v(" "),s("h3",{attrs:{id:"repeat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#repeat"}},[t._v("#")]),t._v(" repeat")]),t._v(" "),s("p",[t._v("repeat(number)")]),t._v(" "),s("p",[t._v("将字符串重复 "),s("code",[t._v("number")]),t._v(" 次。")]),t._v(" "),s("h3",{attrs:{id:"模板字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模板字符串"}},[t._v("#")]),t._v(" 模板字符串")]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("``")]),t._v(" 来进行一个模板字符串的编写")]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("${}")]),t._v(" 来书写 js表达式 花括号中可以放任何有意义的表达式。然后将计算结果拼接到当前位置。")]),t._v(" "),s("p",[t._v("也可以在模板字符串中嵌套模板字符串")]),t._v(" "),s("h4",{attrs:{id:"模板字符串的标记"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模板字符串的标记"}},[t._v("#")]),t._v(" 模板字符串的标记")]),t._v(" "),s("p",[t._v("如果要处理模板字符串，可以在模板字符串之前写上一个标记，这个标记是一个函数名。")]),t._v(" "),s("p",[t._v("函数的 arguments 能拿到被分隔的字符串和你 "),s("code",[t._v("${}")]),t._v(" 定义的变量。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const test= myTest`abcdefg${'a'}+ ${'b'}`;\n\nfunction myTest(){\n\n}\n")])])]),s("p",[t._v("内置标记。")]),t._v(" "),s("p",[t._v("String.raw 用来处理转译字符")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const test = `abc\\def`; // abcdef\nconst testRaw = String.raw`abc\\def`; // abc\\def\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);