(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{653:function(t,e,s){"use strict";s.r(e);var a=s(7),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象"}},[t._v("#")]),t._v(" 对象")]),t._v(" "),s("h3",{attrs:{id:"object-is"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#object-is"}},[t._v("#")]),t._v(" Object.is")]),t._v(" "),s("p",[t._v("等效于 "),s("code",[t._v("===")])]),t._v(" "),s("p",[t._v("但是除了两种情况")]),t._v(" "),s("ul",[s("li",[t._v("NaN == NaN  // false  \t\t\t\t\t\t\tObject.is(NaN,NaN) \t\t\t\t// true")]),t._v(" "),s("li",[t._v("+0 == -0          // true                               Object.is(+0,-0)                                 // false")])]),t._v(" "),s("h3",{attrs:{id:"object-setprototypeof"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#object-setprototypeof"}},[t._v("#")]),t._v(" Object.setPrototypeof")]),t._v(" "),s("p",[s("code",[t._v("Object.setPrototypeof(obj1,obj2)")]),t._v(" 表示将 obj2 设置为 obj1 的隐式原型")]),t._v(" "),s("h3",{attrs:{id:"object-getownpropertynames"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#object-getownpropertynames"}},[t._v("#")]),t._v(" Object.getOwnPropertyNames")]),t._v(" "),s("p",[t._v("该 Api 之前就存在，只是 ES6 对其进行了升级，将返回的属性名数组进行了排序。规则如下：")]),t._v(" "),s("ul",[s("li",[t._v("先排序数字 。 -- 先把数字放到前面")]),t._v(" "),s("li",[t._v("再排字母。      -- 按照原来的顺序把字母的key 放到后面")]),t._v(" "),s("li",[t._v("再排其他。      -- 。。。")])]),t._v(" "),s("h2",{attrs:{id:"类-class"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类-class"}},[t._v("#")]),t._v(" 类 （Class）")]),t._v(" "),s("h3",{attrs:{id:"类的书写方式-class-语法糖"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类的书写方式-class-语法糖"}},[t._v("#")]),t._v(" 类的书写方式（Class 语法糖）")]),t._v(" "),s("p",[t._v("使用 Class关键字来声明类，使用 constructor 来定义类的构造函数。定义的函数会放到类的原型中。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Class A{\n\tconstructor(name,age){\n\t\tthis.name = name;\n\t\tthis.age = age;\n\t}\n\t// 方法定义，会放到 A.prototype 上，\n\tprint(){\n\t\n\t}\n}\n")])])]),s("h3",{attrs:{id:"getter-setter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getter-setter"}},[t._v("#")]),t._v(" getter & setter")]),t._v(" "),s("p",[t._v("在方法名前加上 get、set 关键字来定义 getter 和 setter。")]),t._v(" "),s("p",[t._v("使用 getter 和 setter 控制的属性，不在原型上。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Class A{\n\tconstructor(name){\n\t\tthis.name = name;\n\t}\n\t// 使用 get 关键字定义 getter\n\tget age(){\n\t\treturn this.age;\n\t}\n\t// 使用 set 关键字定义 setter\n\tset age(age){\n\t\tthis.age = age;\n\t}\n}\n")])])]),s("p",[t._v("getter 和 setter 的本质实际上是使用 Object.defineProperty 来定义属性的getter 和 setter，只不过是帮你封装成了一个函数。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Class A{\n\tconstructor(name){\n\t\tthis.name = name;\n\t\t// 实质。\n\t\tObject.defineProperty(this,'age',{\n\t\t\tgetter:function (){\n\t\t\t\treturn \n\t\t\t},\n\t\t\tsetter:function (val){\n\t\t\t\tthis.age = val;\n\t\t\t}\n\t\t})\n\t}\n}\n")])])]),s("h3",{attrs:{id:"静态成员"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#静态成员"}},[t._v("#")]),t._v(" 静态成员")]),t._v(" "),s("p",[t._v("构造函数本身的成员，自己的成员。")]),t._v(" "),s("p",[t._v("使用 static 关键字来定义。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Class A{\n\tstatic a = 1;\n\tstatic methods(){\n\t\n\t}\n}\nA.a // 1\nA.methods() //\n")])])]),s("h3",{attrs:{id:"字段初始化器-es7"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字段初始化器-es7"}},[t._v("#")]),t._v(" 字段初始化器(ES7)")]),t._v(" "),s("ul",[s("li",[t._v("使用 static 的字段初始化器，添加的是静态成员")]),t._v(" "),s("li",[t._v("没有使用 static 的字段初始化器，添加的成员位于对象上，即创建出来的实例每个都有。")]),t._v(" "),s("li",[t._v("箭头函数在字段初始化器位置上，指向当前对象。")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Class A{\n \tstatic a = 1; // 静态成员\n \tb = 2;\n \tc = 3;\n \tprint = () =>{\n \t\t\n \t}\n \t// 相当于 下面这种写法。\n \tconstructor(){\n \t\tthis.b = 2;\n \t\tthis.c = 3;\n \t\tthis.print = ()=>{} // 箭头函数的this由定义的位置决定。\n \t}\n \t\n \t\n}\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);