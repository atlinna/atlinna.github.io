(window.webpackJsonp=window.webpackJsonp||[]).push([[131],{716:function(t,n,e){"use strict";e.r(n);var s=e(10),a=Object(s.a)({},(function(){var t=this.$createElement,n=this._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("h2",{attrs:{id:"常数时间内操作数组"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常数时间内操作数组"}},[this._v("#")]),this._v(" 常数时间内操作数组")]),this._v(" "),n("p",[this._v("主要思想：\n当我们插入或者删除一个数组中的数据时只有数组末尾项不会进行数据的移动整理。\n于是，我们只需要将要删除的数据，与末尾项交换，使用一个Hash表来存放我们数据的索引。")]),this._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("var RandomizedSet = function () {\n    this.indexObj = {};\n    this.stack = [];\n};\n\n/** \n * @param {number} val\n * @return {boolean}\n */\nRandomizedSet.prototype.insert = function (val) {\n    if (typeof this.indexObj[val] != 'undefined') {\n        return false;\n    }\n    this.indexObj[val] = this.stack.length;\n    this.stack.push(val);\n    return true;\n};\n\n/** \n * @param {number} val\n * @return {boolean}\n */\nRandomizedSet.prototype.remove = function (val) {\n    if (typeof this.indexObj[val] == 'undefined') {\n        return false;\n    }\n\n    var lastNum = this.stack[this.stack.length - 1];\n    this.indexObj[lastNum] = this.indexObj[val];\n    this.stack[this.stack.length - 1] = this.stack[this.indexObj[val]];\n    this.stack[this.indexObj[val]] = lastNum;\n    delete this.indexObj[val];\n    this.stack.pop();\n    return true;\n};\n\n/**\n * @return {number}\n */\nRandomizedSet.prototype.getRandom = function () {\n    if (this.stack.length == 0) return;\n    const key = parseInt(Math.random() * this.stack.length);\n    return this.stack[key];\n};\n")])])])])}),[],!1,null,null,null);n.default=a.exports}}]);