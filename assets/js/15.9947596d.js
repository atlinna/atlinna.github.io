(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{604:function(e,n,r){"use strict";r.r(n);var o=r(10),t=Object(o.a)({},(function(){var e=this,n=e.$createElement,r=e._self._c||n;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h3",{attrs:{id:"打包原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#打包原理"}},[e._v("#")]),e._v(" 打包原理")]),e._v(" "),r("p",[e._v("webpack 打包原理，实际上就是，通过主文件 "),r("code",[e._v("index.js")]),e._v("确定依赖，将所有依赖的文件，通过路径找到文件，并将文件内容放入函数中执行，其中可能需要用到 module，exports，require。")]),e._v(" "),r("p",[e._v("所以需要自己实现一个 require 函数，来根据文件路径找到对应函数并运行，在通过自定义的 module 拿到导出结果，并返回。")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('(function (modules) {\n  var moduleExports = {}; // 缓存状态\n  function _require(moduleId) {\n    if (moduleExports[moduleId]) return moduleExports[moduleId]; // 使用缓存\n    var func = modules[moduleId];\n    var module = {\n      exports: {},\n    };\n    func.call(module.exports, module, module.exports, _require); // 运行依赖文件，获取导出结果。\n    var result = module.exports;\n    moduleExports[moduleId] = result; // 添加缓存\n    return result;\n  }\n  _require("./a.js"); // 引入主文件 ，应该是 index.js\n})({\n  // 读取文件，将文件内容放到函数中。\n  "./a.js": function (module, exports, require) {\n    var b = require("./b.js");\n    console.log(b);\n    exports.nb = b + 1;\n  },\n  "./b.js": function (module, exports, require) {\n    module.exports = {\n      b: 1111,\n    };\n  },\n});\n\n')])])])])}),[],!1,null,null,null);n.default=t.exports}}]);