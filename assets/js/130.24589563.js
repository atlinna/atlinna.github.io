(window.webpackJsonp=window.webpackJsonp||[]).push([[130],{717:function(s,e,o){"use strict";o.r(e);var t=o(10),i=Object(t.a)({},(function(){var s=this,e=s.$createElement,o=s._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[o("p",[s._v("ASCII 转 Base64")]),s._v(" "),o("p",[s._v("btoa()")]),s._v(" "),o("p",[s._v("Base64 转 ASCII")]),s._v(" "),o("p",[s._v("atob()")]),s._v(" "),o("h4",{attrs:{id:"cookie-和-session-的区别"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#cookie-和-session-的区别"}},[s._v("#")]),s._v(" cookie 和 session 的区别")]),s._v(" "),o("ul",[o("li",[s._v("cookie 的数据保存在浏览器端，session 的数据保存在服务器")]),s._v(" "),o("li",[s._v("coolie 的存储空间有限，session 的存储空间无限")]),s._v(" "),o("li",[s._v("cookie 只能保存字符串，session 可以保存任何类型的数据")]),s._v(" "),o("li",[s._v("cookie 中的数据容易被获取，session 中的数据难以获取")])]),s._v(" "),o("h4",{attrs:{id:"如何消除-session"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#如何消除-session"}},[s._v("#")]),s._v(" 如何消除 session")]),s._v(" "),o("ul",[o("li",[s._v("过期时间 当客户端长时间没有传递 sessionId 过来时，服务器可以在过期时间之后自动清除 session")]),s._v(" "),o("li",[s._v("客户端主动通知 可以使用 js 监听客户端页面关闭或其他退出操作，然后通知服务器清除 session （监听 unloaded 事件）")])]),s._v(" "),o("h4",{attrs:{id:"http-缓存协议"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#http-缓存协议"}},[s._v("#")]),s._v(" HTTP 缓存协议")]),s._v(" "),o("p",[s._v("首先，客户端发送一个没有缓存的普通请求到服务器，服务器响应该请求，如果需要缓存，会在响应头的 Cache-Control 中添加一个过期时间。然后浏览器将响应内容加入缓存中，后续请求，如果 匹配上路径，则直接使用缓存，如果缓存失效，客户端会发送一条带有缓存的请求，服务器判断如果内容更新，则响应新内容，如果还能继续使用，则不响应任何东西，且状态码是 304 ，然后 Cache-Control 会返回一个新的过期时间。")])])}),[],!1,null,null,null);e.default=i.exports}}]);