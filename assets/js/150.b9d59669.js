(window.webpackJsonp=window.webpackJsonp||[]).push([[150],{737:function(e,n,t){"use strict";t.r(n);var r=t(10),s=Object(r.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h3",{attrs:{id:"链表的逆转-逆转链表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#链表的逆转-逆转链表"}},[e._v("#")]),e._v(" 链表的逆转（逆转链表）")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// 逆转链表\nfunction linkedReverse(node) {\n  if (!node.next.next) {\n    node.next.next = node;\n    return node.next;\n  } else {\n    var ret = linkedReverse(node.next);\n    node.next.next = node;\n    node.next = null;\n    return ret;\n  }\n}\n")])])]),t("p",[e._v("这个要怎么想呢？")]),e._v(" "),t("p",[e._v("首先我们要先找到递归的出口，我们首先是不是要找到最后一个节点，然后让最后一个节点的next 指向我们前一个节点。")])])}),[],!1,null,null,null);n.default=s.exports}}]);