(window.webpackJsonp=window.webpackJsonp||[]).push([[137],{724:function(t,n,a){"use strict";a.r(n);var s=a(10),e=Object(s.a)({},(function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"回溯"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#回溯"}},[t._v("#")]),t._v(" 回溯")]),t._v(" "),a("p",[t._v("回溯算法是什么？解决回溯算法相关的问题有什么技巧？如何学习回溯算法？回溯算法代码是否有规律可循？")]),t._v(" "),a("ul",[a("li",[t._v("1、回溯算法和我们常说的 DFS 算法非常类似，本质上就是一种暴力穷举算法。")]),t._v(" "),a("li",[t._v("2、回溯算法和 DFS 算法的细微差别是："),a("strong",[t._v("回溯算法是在遍历「树枝」，DFS 算法是在遍历「节点」")])])]),t._v(" "),a("p",[t._v("解决回溯问题需要考虑三个要素：")]),t._v(" "),a("ul",[a("li",[t._v("1、路径：也就是已经做出的选择。")]),t._v(" "),a("li",[t._v("2、选择列表：也就是你当前可以做的选择。")]),t._v(" "),a("li",[t._v("3、结束条件：也就是到达决策树底层，无法再做选择的条件。")])]),t._v(" "),a("p",[t._v("即：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("function backTrack(路径,选择列表){\n  if(结束条件){\n    result.push(path)\n    return\n  }\n  for(选项 in 选择列表){\n    if(满足条件){ // 即剪枝\n      做选择\n      backTrack(新路径，选择列表)\n      撤销选择\n    }\n  }\n}\n")])])])])}),[],!1,null,null,null);n.default=e.exports}}]);