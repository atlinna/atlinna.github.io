(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{643:function(t,e,a){"use strict";a.r(e);var s=a(7),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"对象包装类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象包装类"}},[t._v("#")]),t._v(" 对象包装类")]),t._v(" "),a("h3",{attrs:{id:"对象的创建方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象的创建方法"}},[t._v("#")]),t._v(" 对象的创建方法")]),t._v(" "),a("ul",[a("li",[t._v("1、 对象字面量  var obj = {};")]),t._v(" "),a("li",[t._v("2、 构造函数\n"),a("ul",[a("li",[t._v("系统自带的构造函数 Object")]),t._v(" "),a("li",[t._v("自定义（构造函数）")])])])]),t._v(" "),a("h3",{attrs:{id:"包装类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#包装类"}},[t._v("#")]),t._v(" 包装类")]),t._v(" "),a("p",[t._v("如 String、 Number、 Boolean。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("let s = new String(‘abc’);\nlet n = new Number(12);\nlet b = new Boolean(true);\n\ntypeof s|n|b // 结果都是 object\n")])])]),a("p",[t._v("包装类能够通过一些运算操作变回普通数据：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("let s = new String(‘abc’);\ns += 1;\n// s -> abc1 变回字符串了 ，同理也发生在其他包装类上\n")])])]),a("p",[t._v("假设有字符串 s ，然后我们为 s 添加属性 test 不会报错，但是也并没有什么作用。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("let s = ‘abc’;\ns.test = ‘bcd’; // undefined\n")])])]),a("p",[t._v("原理是：当我们为字符串添加属性的时候内部会将字符串转为包装类，然后再删除这个属性")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("let s = ‘abc’\ns.test = ‘bcd’;\n// 相当于 new String(s).test = ‘bcd’; delete xxx;\n")])])]),a("p",[t._v("charCodeAt(str) 返回 str 对应的 unicode 码值  小于等于 255 为 英文字母 大于255 为汉字")])])}),[],!1,null,null,null);e.default=n.exports}}]);